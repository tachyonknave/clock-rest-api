name: Dev Pipeline

on:
  push:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLOCK_URL: http://localhost:5002/
  LABEL: ${{ github.ref_name }}



jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      # Get Repo
      - uses: actions/checkout@v4
      # Setup python 3.11
      - uses: actions/setup-python@v5
        with:
         python-version: '3.11'

      - name: Install dependencies
        run: make dependencies

      - name: Run unit tests
        id: tests
        run:  make unit > unit_test_output.txt || true

      - name: Add test results to job summary
        if: always()
        run: |
          echo "### Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat ./tests/results/unit.md >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          if [[ ${{ steps.tests.outcome }} == 'failure' ]]; then
            exit 1
          fi

  build:
    needs: unit-tests

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
           registry: ${{ env.REGISTRY }}
           username: ${{ github.actor }}
           password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build the Docker image
        uses: docker/build-push-action@v6
        with:
           context: .
           file: ./docker/Dockerfile
           push: true
           tags: ${{ steps.meta.outputs.tags }}
           labels: ${{ steps.meta.outputs.labels }}


  behave-tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: make dependencies

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
           registry: ${{ env.REGISTRY }}
           username: ${{ github.actor }}
           password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull prebuilt Docker image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LABEL }}

      - name: Run Docker container in detached mode
        run: >
          docker run -d --rm -p 5002:5002 --name test-container 
          -e CLOCK_URL=${{ env.CLOCK_URL }} 
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LABEL }}

      - name: Wait for service to be ready
        run: |
          echo "Waiting for container to be ready..."
          for i in {1..15}; do
            if curl -s --fail http://localhost:5002/health; then
              echo "Container is ready!"
              exit 0
            fi
            sleep 2
          done
          echo "Container did not become ready in time."
          exit 1

      - name: Run tests
        id: tests
        run: make integration > behave_output.txt || true

      - name: Add test results to job summary
        if: always()
        run: |
          echo "### Behave Test Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat behave_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          if [[ ${{ steps.tests.outcome }} == 'failure' ]]; then
            exit 1
          fi

      - name: Stop container
        if: always()
        run: docker stop test-container
